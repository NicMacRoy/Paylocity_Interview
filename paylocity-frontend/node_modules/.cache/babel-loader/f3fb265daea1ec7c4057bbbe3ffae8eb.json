{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nmacr\\\\source\\\\repos\\\\Paylocity\\\\paylocity-frontend\\\\src\\\\components\\\\CompanyReport.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport axios from 'axios';\nimport { variables } from '../Variables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyReport = () => {\n  _s();\n\n  const [employeeData, setData] = useState([]);\n  useEffect(() => {\n    getEmployeeData();\n  }, []);\n\n  const getEmployeeData = async () => {\n    await axios.get(`${variables.API_URL}/Employee`).then(response => {\n      setData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Paylocity Staff Expense Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Total Employees: \", employeeData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Total Pre-reductions Payroll Cost: $\", employeeData.length ? employeeData.map(emp => emp.pretaxedPaycheckSalary).reduce((a, b) => a + b) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Total Post-reductions Payroll: $\", employeeData.length ? employeeData.map(emp => emp.taxedPaycheckSalary).reduce((a, b) => a + b).toFixed(2) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Employee Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Paycheck Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Net Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Benefit Self-Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Number of Dependants\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Dependant Cost\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: employeeData.length ? employeeData.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.pretaxedPaycheckSalary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.taxedPaycheckSalary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.payCheckBenefitCost\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.dependants.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (row.pretaxedPaycheckSalary - (row.taxedPaycheckSalary + row.payCheckBenefitCost)).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"No Records found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyReport, \"POntrtfGK0Lcl0yKtyKHtpazEHo=\");\n\n_c = CompanyReport;\nexport default CompanyReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyReport\");","map":{"version":3,"sources":["C:/Users/Nmacr/source/repos/Paylocity/paylocity-frontend/src/components/CompanyReport.js"],"names":["React","useState","useEffect","Paper","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","axios","variables","CompanyReport","employeeData","setData","getEmployeeData","get","API_URL","then","response","data","catch","error","console","log","length","map","emp","pretaxedPaycheckSalary","reduce","a","b","taxedPaycheckSalary","toFixed","minWidth","row","firstName","lastName","payCheckBenefitCost","dependants","id"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport axios from 'axios';\r\nimport { variables } from '../Variables';\r\n\r\nconst CompanyReport = () => {\r\n    const [employeeData, setData] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        getEmployeeData();\r\n    }, []);\r\n\r\n    const getEmployeeData = async () => {\r\n        await axios\r\n            .get(`${variables.API_URL}/Employee`)\r\n            .then((response) => {\r\n                setData(response.data);\r\n            }).catch(function(error){\r\n                console.log(error);\r\n            });\r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <Grid item xs={12}>\r\n                        <h1>Paylocity Staff Expense Report</h1>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Total Employees: {employeeData.length}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Total Pre-reductions Payroll Cost: \r\n                        ${employeeData.length ? \r\n                            employeeData.map(emp => emp.pretaxedPaycheckSalary).reduce((a,b) => a+b) : 0 }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Total Post-reductions Payroll:\r\n                        ${employeeData.length ? \r\n                            (employeeData.map(emp => emp.taxedPaycheckSalary).reduce((a,b) => a+b)).toFixed(2) : 0 }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h1>Employee Breakdown</h1>\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>First Name</TableCell>\r\n                                    <TableCell>Last Name</TableCell>\r\n                                    <TableCell>Paycheck Amount</TableCell>\r\n                                    <TableCell>Net Amount</TableCell>\r\n                                    <TableCell>Benefit Self-Cost</TableCell>\r\n                                    <TableCell>Number of Dependants</TableCell>\r\n                                    <TableCell>Dependant Cost</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {employeeData.length ? employeeData.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">{row.firstName}</TableCell>\r\n                                        <TableCell>{row.lastName}</TableCell>\r\n                                        <TableCell>{row.pretaxedPaycheckSalary}</TableCell>\r\n                                        <TableCell>{row.taxedPaycheckSalary}</TableCell>\r\n                                        <TableCell>{row.payCheckBenefitCost}</TableCell>\r\n                                        <TableCell>{row.dependants.length}</TableCell>\r\n                                        <TableCell>{(row.pretaxedPaycheckSalary-(row.taxedPaycheckSalary + row.payCheckBenefitCost)).toFixed(2)}</TableCell>\r\n                                    </TableRow>\r\n                                )) : <TableRow><TableCell>No Records found</TableCell></TableRow>}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompanyReport;"]},"metadata":{},"sourceType":"module"}