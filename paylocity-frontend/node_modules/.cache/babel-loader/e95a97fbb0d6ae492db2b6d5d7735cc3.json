{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nmacr\\\\source\\\\repos\\\\Paylocity\\\\paylocity_frontend\\\\src\\\\components\\\\CompanyReport.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { TextField } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport axios from 'axios';\nimport { variables } from '../Variables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyReport = () => {\n  _s();\n\n  const [employeeData, setData] = useState([]);\n  const [payrollTotal, setPayrollTotal] = useState(0);\n  useEffect(() => {\n    getEmployeeData();\n  }, []);\n\n  const getEmployeeData = async () => {\n    await axios.get(`${variables.API_URL}/Employee`).then(response => {\n      setData(response.data);\n      console.log(response.data);\n    });\n  };\n\n  const GetPayrollTotal = () => {\n    var cost = 0;\n\n    for (let i = 0; i > employeeData.length; i++) {\n      cost += employeeData['pretaxedPaycheckSalary'];\n    }\n\n    setPayrollTotal(cost);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Paylocity Staff Expense Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Total Employees: \", employeeData.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Total Pre-reductions Payroll Cost:\", employeeData.length ? employeeData.map(emp => emp.pretaxedPaycheckSalary).reduce((a, b) => a + b) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [\"Total Post-reductions Payroll:\", employeeData.length ? employeeData.map(emp => emp.taxedPaycheckSalary).reduce((a, b) => a + b) : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyReport, \"oX35zudWudCdFNOAouDFLuWT5uc=\");\n\n_c = CompanyReport;\nexport default CompanyReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyReport\");","map":{"version":3,"sources":["C:/Users/Nmacr/source/repos/Paylocity/paylocity_frontend/src/components/CompanyReport.js"],"names":["React","useState","useEffect","Paper","Grid","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","DeleteIcon","axios","variables","CompanyReport","employeeData","setData","payrollTotal","setPayrollTotal","getEmployeeData","get","API_URL","then","response","data","console","log","GetPayrollTotal","cost","i","length","map","emp","pretaxedPaycheckSalary","reduce","a","b","taxedPaycheckSalary"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { TextField } from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport axios from 'axios';\r\nimport { variables } from '../Variables';\r\n\r\nconst CompanyReport = () => {\r\n    const [employeeData, setData] = useState([]);\r\n    const [payrollTotal, setPayrollTotal] = useState(0);\r\n\r\n    \r\n    useEffect(() => {\r\n        getEmployeeData();\r\n    }, []);\r\n\r\n    const getEmployeeData = async () => {\r\n        await axios\r\n            .get(`${variables.API_URL}/Employee`)\r\n            .then((response) => {\r\n                setData(response.data);\r\n                console.log(response.data);\r\n            });\r\n    };\r\n\r\n    const GetPayrollTotal = () => {\r\n        var cost = 0;\r\n\r\n        for(let i = 0; i > employeeData.length; i++){\r\n            cost += employeeData['pretaxedPaycheckSalary'];\r\n        }\r\n\r\n        setPayrollTotal(cost);\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <Grid item xs={12}>\r\n                        <h1>Paylocity Staff Expense Report</h1>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Total Employees: {employeeData.length}\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Total Pre-reductions Payroll Cost: \r\n                        {employeeData.length ? \r\n                            employeeData.map(emp => emp.pretaxedPaycheckSalary).reduce((a,b) => a+b) : 0 }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        Total Post-reductions Payroll:\r\n                        {employeeData.length ? \r\n                            employeeData.map(emp => emp.taxedPaycheckSalary).reduce((a,b) => a+b) : 0 }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    hi\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompanyReport;"]},"metadata":{},"sourceType":"module"}